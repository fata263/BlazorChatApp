@using Microsoft.JSInterop
@inject IJSRuntime JS

<div class="app-header">
    <div class="header-left">
        <span class="logo">🛠️ Tire Alert System</span>
        <span class="station-name">— Station: @(StationName ?? "(Unknown)")</span>
    </div>
    <div class="header-right">
        <span class="user-icon">👤</span>
        <span>@(FullName ?? "Guest")</span>
    </div>
</div>

@code {
    private string? StationName;
    private string? FullName;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        try
        {
            var username = await JS.InvokeAsync<string>("sessionStorage.getItem", "username");
            var fullName = await JS.InvokeAsync<string>("sessionStorage.getItem", "fullName");
            var station = await JS.InvokeAsync<string>("sessionStorage.getItem", "stationName");

            StationName = string.IsNullOrEmpty(station) ? "(Unknown)" : station;
            FullName = string.IsNullOrWhiteSpace(fullName)
                ? username
                : $"{fullName}";

            StateHasChanged();
        }
        catch
        {
            StationName = "(Unknown)";
            FullName = "Guest";
        }
    }
}