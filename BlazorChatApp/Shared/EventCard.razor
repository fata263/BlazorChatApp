@using BlazorChatApp.Data
@using Microsoft.AspNetCore.Components

<div class="event-card p-3 border rounded shadow-sm mb-3">
    <div>
        <strong>@Event.Type</strong> — @Event.State
    </div>
    <div class="text-muted">
        From: @Event.Sender <br />
        Time: @Event.Timestamp.ToLocalTime()
    </div>

    @if (Event.State != EventState.Closed)
    {
        <div class="mt-3">
            @if (Event.State == EventState.New)
            {
                <button class="btn btn-sm btn-primary" @onclick="OnPromote">Activate</button>
            }

            @if (Event.State == EventState.Active)
            {
                <button class="btn btn-sm btn-secondary me-2" @onclick="() => PromptForward()">Forward</button>
                <button class="btn btn-sm btn-success" @onclick="OnResolve">Resolve</button>
            }
        </div>
    }

    @if (ShowForward)
    {
        <div class="mt-2">
            <input class="form-control" @bind="ForwardTo" placeholder="Username to forward to..." />
            <button class="btn btn-sm btn-outline-primary mt-1" @onclick="@(() => OnForward.InvokeAsync(ForwardTo))">Send</button>
            <button class="btn btn-sm btn-link mt-1" @onclick="@(() => ShowForward = false)">Cancel</button>
        </div>
    }
</div>

@code {
    [Parameter] public AppEvent Event { get; set; } = default!;
    [Parameter] public EventCallback OnResolve { get; set; }
    [Parameter] public EventCallback OnPromote { get; set; }
    [Parameter] public EventCallback<string> OnForward { get; set; }

    private bool ShowForward = false;
    private string ForwardTo = "";

    private void PromptForward()
    {
        ShowForward = true;
    }
}